
server.port=8082
spring.application.name=api-gateway
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

# enables discovery locator feature, so it will try to map our
# HTTP requests to a service registered with Eureka, URL in requests will need
# to contain a service name
# e.g. http://localhost:8082/ACCOUNTS-WS/account/status/check
#spring.cloud.gateway.discovery.locator.enabled=true

# previous property enables feature that is case-sensitive, so in order
# to use service name in lower case we need to add the following property:
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# IN case we don't want to include service name in the request URL, we need
# the following properties to create custom gateway routes (P.S. could work with discovery locator feature):
spring.cloud.gateway.routes[0].id=users-status-check
# lb -> load balancer, it will take users-ws service addresses from Eureka
# and balance load between instances
# url will look like: http://localhost:8082/users/status/check
spring.cloud.gateway.routes[0].uri=lb://users-ws
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
# Filter that will remove all cookies from request
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
# In case we want to rewrite URL path, e.g. from this "/users-ws/users/status/check"
# to this "/users/status/check", we can use built-in filter RewritePath:
#spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/users/status/check, /users/status/check